@page "/projects"
@using MyProject.UI.ProjectManagementConsole.Models
@using MyProject.UI.ProjectManagementConsole.Services
@inject IProjectService ProjectService
@inject NavigationManager Navigation

<PageTitle>Projects</PageTitle>

<div class="container-fluid">
    <div class="row mb-3">
        <div class="col">
            <h1>Projects</h1>
        </div>
        <div class="col-auto">
            <a href="/projects/create" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i> Create Project
            </a>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (errorMessage != null)
    {
        <div class="alert alert-danger" role="alert">
            @errorMessage
        </div>
    }
    else
    {
        <div class="card">
            <div class="card-body">
                @if (projects.Count == 0)
                {
                    <div class="text-center py-4">
                        <i class="bi bi-kanban display-1 text-muted"></i>
                        <h3 class="mt-3">No Projects Found</h3>
                        <p class="text-muted">Get started by creating your first project.</p>
                        <a href="/projects/create" class="btn btn-primary">
                            <i class="bi bi-plus-circle"></i> Create Project
                        </a>
                    </div>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>Project Name</th>
                                    <th>Type</th>
                                    <th>Status</th>
                                    <th>Manager</th>
                                    <th>Organization</th>
                                    <th>Timeline</th>
                                    <th>Budget</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var project in projects)
                                {
                                    <tr>
                                        <td>
                                            <strong>@project.ProjectName</strong>
                                            @if (!string.IsNullOrEmpty(project.Description))
                                            {
                                                <br />
                                                <small class="text-muted">@project.Description</small>
                                            }
                                        </td>
                                        <td>
                                            <span class="badge bg-info">@project.ProjectType</span>
                                        </td>
                                        <td>
                                            <span class="badge @GetStatusBadgeClass(project.ProjectStatus)">
                                                @project.ProjectStatus
                                            </span>
                                        </td>
                                        <td>
                                            @if (project.ProjectManager != null)
                                            {
                                                <span>@project.ProjectManager.FirstName @project.ProjectManager.LastName</span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">Unassigned</span>
                                            }
                                        </td>
                                        <td>
                                            @if (project.Organization != null)
                                            {
                                                <span>@project.Organization.OrganizationName</span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">No Organization</span>
                                            }
                                        </td>
                                        <td>
                                            @if (project.PlannedStartDate.HasValue && project.PlannedEndDate.HasValue)
                                            {
                                                <small>
                                                    @project.PlannedStartDate.Value.ToString("MMM dd") - 
                                                    @project.PlannedEndDate.Value.ToString("MMM dd, yyyy")
                                                </small>
                                            }
                                            else
                                            {
                                                <span class="text-muted">Not set</span>
                                            }
                                        </td>
                                        <td>
                                            @if (project.PlannedBudget.HasValue)
                                            {
                                                <span>$@project.PlannedBudget.Value.ToString("N0")</span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">Not set</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <a href="/projects/@project.ProjectId" class="btn btn-sm btn-outline-primary">
                                                    <i class="bi bi-eye"></i> View
                                                </a>
                                                <a href="/projects/@project.ProjectId/edit" class="btn btn-sm btn-outline-secondary">
                                                    <i class="bi bi-pencil"></i> Edit
                                                </a>
                                                <button type="button" class="btn btn-sm btn-outline-danger" @onclick="() => DeleteProject(project.ProjectId)">
                                                    <i class="bi bi-trash"></i> Delete
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
    }
</div>

@code {
    private List<ProjectDto> projects = new();
    private bool isLoading = true;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        await LoadProjects();
    }

    private async Task LoadProjects()
    {
        try
        {
            isLoading = true;
            errorMessage = null;
            projects = await ProjectService.GetProjectsAsync();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading projects: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task DeleteProject(Guid id)
    {
        if (await ProjectService.DeleteProjectAsync(id))
        {
            await LoadProjects();
        }
        else
        {
            errorMessage = "Failed to delete project";
        }
    }

    private string GetStatusBadgeClass(string status)
    {
        return status.ToLower() switch
        {
            "planning" => "bg-info",
            "active" => "bg-success",
            "on hold" => "bg-warning",
            "completed" => "bg-secondary",
            "cancelled" => "bg-danger",
            "suspended" => "bg-warning",
            _ => "bg-secondary"
        };
    }
} 