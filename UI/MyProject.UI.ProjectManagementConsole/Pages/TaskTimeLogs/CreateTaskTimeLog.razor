@page "/tasktimelogs/create"
@using MyProject.UI.ProjectManagementConsole.Models
@using MyProject.UI.ProjectManagementConsole.Services
@inject ITaskTimeLogService TaskTimeLogService
@inject ITaskService TaskService
@inject IResourceService ResourceService
@inject NavigationManager Navigation

<PageTitle>Create Time Log</PageTitle>

<div class="container-fluid">
    <div class="row mb-3">
        <div class="col">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/tasktimelogs">Task Time Logs</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Create Time Log</li>
                </ol>
            </nav>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    <h3 class="mb-0"><i class="bi bi-plus-circle"></i> Create New Time Log</h3>
                </div>
                <div class="card-body">
                    <EditForm Model="timeLog" OnValidSubmit="HandleValidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="taskId" class="form-label">Task *</label>
                                    <InputSelect id="taskId" class="form-select" @bind-Value="timeLog.TaskId">
                                        <option value="">Select a Task</option>
                                        @if (tasks != null)
                                        {
                                                                                    @foreach (var task in tasks)
                                        {
                                            <option value="@task.TaskId">@task.TaskName - @task.TaskStatus</option>
                                        }
                                        }
                                    </InputSelect>
                                    <ValidationMessage For="@(() => timeLog.TaskId)" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="resourceId" class="form-label">Resource *</label>
                                    <InputSelect id="resourceId" class="form-select" @bind-Value="timeLog.ResourceId">
                                        <option value="">Select a Resource</option>
                                        @if (resources != null)
                                        {
                                            @foreach (var resource in resources)
                                            {
                                                <option value="@resource.ResourceId">@resource.FirstName @resource.LastName - @resource.JobTitle</option>
                                            }
                                        }
                                    </InputSelect>
                                    <ValidationMessage For="@(() => timeLog.ResourceId)" />
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="dateWorked" class="form-label">Date Worked *</label>
                                    <InputDate id="dateWorked" class="form-control" @bind-Value="timeLog.DateWorked" />
                                    <ValidationMessage For="@(() => timeLog.DateWorked)" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="hoursWorked" class="form-label">Hours Worked *</label>
                                    <InputNumber id="hoursWorked" class="form-control" @bind-Value="timeLog.HoursWorked" step="0.5" min="0.01" max="24" />
                                    <ValidationMessage For="@(() => timeLog.HoursWorked)" />
                                    <div class="form-text">Enter hours between 0.01 and 24.0</div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="workType" class="form-label">Work Type</label>
                                    <InputSelect id="workType" class="form-select" @bind-Value="timeLog.WorkType">
                                        <option value="">Select Work Type</option>
                                        <option value="Development">Development</option>
                                        <option value="Testing">Testing</option>
                                        <option value="Design">Design</option>
                                        <option value="Documentation">Documentation</option>
                                        <option value="Meeting">Meeting</option>
                                        <option value="Research">Research</option>
                                        <option value="Support">Support</option>
                                        <option value="Planning">Planning</option>
                                        <option value="Review">Review</option>
                                        <option value="Training">Training</option>
                                    </InputSelect>
                                    <ValidationMessage For="@(() => timeLog.WorkType)" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="hourlyRate" class="form-label">Hourly Rate ($)</label>
                                    <InputNumber id="hourlyRate" class="form-control" @bind-Value="timeLog.HourlyRate" step="0.01" min="0" />
                                    <ValidationMessage For="@(() => timeLog.HourlyRate)" />
                                    <div class="form-text">Leave empty to use resource's default rate</div>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <InputTextArea id="description" class="form-control" rows="3" @bind-Value="timeLog.Description" placeholder="Describe the work performed..." />
                            <ValidationMessage For="@(() => timeLog.Description)" />
                            <div class="form-text">Optional description of the work performed</div>
                        </div>

                        <div class="mb-3">
                            <div class="form-check">
                                <InputCheckbox id="isBillable" class="form-check-input" @bind-Value="timeLog.IsBillable" />
                                <label class="form-check-label" for="isBillable">
                                    This time is billable
                                </label>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between">
                            <a href="/tasktimelogs" class="btn btn-secondary">
                                <i class="bi bi-arrow-left"></i> Back to Time Logs
                            </a>
                            <button type="submit" class="btn btn-primary" disabled="@isSubmitting">
                                @if (isSubmitting)
                                {
                                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                    <span>Creating...</span>
                                }
                                else
                                {
                                    <i class="bi bi-check-circle"></i>
                                    <span>Create Time Log</span>
                                }
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="bi bi-info-circle"></i> Time Log Information</h5>
                </div>
                <div class="card-body">
                    <p class="text-muted">
                        Time logs allow resources to track the hours they spend working on specific tasks.
                        This information is used for:
                    </p>
                    <ul class="text-muted">
                        <li>Project time tracking</li>
                        <li>Resource utilization</li>
                        <li>Billing and invoicing</li>
                        <li>Project cost analysis</li>
                        <li>Performance reporting</li>
                    </ul>
                    
                    <hr />
                    
                    <h6>Tips:</h6>
                    <ul class="small text-muted">
                        <li>Be specific in your description</li>
                        <li>Use appropriate work types</li>
                        <li>Set accurate hourly rates</li>
                        <li>Mark non-billable time appropriately</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private CreateTaskTimeLogDto timeLog = new();
    private List<TaskDto>? tasks;
    private List<ResourceDto>? resources;
    private bool isSubmitting = false;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        try
        {
            // Load tasks and resources for dropdowns
            tasks = await TaskService.GetTasksAsync();
            resources = await ResourceService.GetResourcesAsync();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading data: {ex.Message}";
        }
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            isSubmitting = true;
            errorMessage = null;

            // Set default tenant ID (you might want to get this from user context)
            timeLog.TenantId = Guid.NewGuid(); // Replace with actual tenant ID

            var createdTimeLog = await TaskTimeLogService.CreateTaskTimeLogAsync(timeLog);
            
            Navigation.NavigateTo($"/tasktimelogs/{createdTimeLog.TaskTimeLogId}");
        }
        catch (Exception ex)
        {
            errorMessage = $"Error creating time log: {ex.Message}";
        }
        finally
        {
            isSubmitting = false;
        }
    }
} 