@page "/tasktimelogs/{TaskTimeLogId:guid}"
@using MyProject.UI.ProjectManagementConsole.Models
@using MyProject.UI.ProjectManagementConsole.Services
@inject ITaskTimeLogService TaskTimeLogService
@inject NavigationManager Navigation

<PageTitle>View Time Log</PageTitle>

<div class="container-fluid">
    @if (isLoading)
    {
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (errorMessage != null)
    {
        <div class="alert alert-danger" role="alert">
            @errorMessage
        </div>
    }
    else if (timeLog == null)
    {
        <div class="alert alert-warning" role="alert">
            <h4 class="alert-heading">Time Log Not Found</h4>
            <p>The requested time log could not be found.</p>
            <hr>
            <a href="/tasktimelogs" class="btn btn-primary">Back to Time Logs</a>
        </div>
    }
    else
    {
        <div class="row mb-3">
            <div class="col">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/tasktimelogs">Task Time Logs</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Time Log Details</li>
                    </ol>
                </nav>
            </div>
            <div class="col-auto">
                <div class="btn-group" role="group">
                    <a href="/tasktimelogs/@timeLog.TaskTimeLogId/edit" class="btn btn-primary">
                        <i class="bi bi-pencil"></i> Edit Time Log
                    </a>
                    <button type="button" class="btn btn-danger" @onclick="() => DeleteTimeLog(timeLog.TaskTimeLogId)">
                        <i class="bi bi-trash"></i> Delete Time Log
                    </button>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-8">
                <!-- Main Time Log Details -->
                <div class="card mb-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h3 class="mb-0">
                            <i class="bi bi-clock text-primary"></i> Time Log Details
                        </h3>
                        <div>
                            <span class="badge @(timeLog.IsBillable ? "bg-success" : "bg-secondary") fs-6">
                                @(timeLog.IsBillable ? "Billable" : "Non-Billable")
                            </span>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <h5>Time Information</h5>
                                <div class="mb-3">
                                    <strong>Date Worked:</strong>
                                    <br />
                                    <span class="fs-5">@timeLog.DateWorked.ToString("MMMM dd, yyyy")</span>
                                </div>
                                <div class="mb-3">
                                    <strong>Hours Worked:</strong>
                                    <br />
                                    <span class="badge bg-primary fs-4">@timeLog.HoursWorked.ToString("F1") hours</span>
                                </div>
                                @if (!string.IsNullOrEmpty(timeLog.WorkType))
                                {
                                    <div class="mb-3">
                                        <strong>Work Type:</strong>
                                        <br />
                                        <span class="badge bg-info">@timeLog.WorkType</span>
                                    </div>
                                }
                            </div>
                            <div class="col-md-6">
                                <h5>Billing Information</h5>
                                @if (timeLog.HourlyRate.HasValue)
                                {
                                    <div class="mb-3">
                                        <strong>Hourly Rate:</strong>
                                        <br />
                                        <span class="fs-5">$@timeLog.HourlyRate.Value.ToString("F2")/hour</span>
                                    </div>
                                }
                                @if (timeLog.TotalCost.HasValue)
                                {
                                    <div class="mb-3">
                                        <strong>Total Cost:</strong>
                                        <br />
                                        <span class="fs-5 text-success fw-bold">$@timeLog.TotalCost.Value.ToString("F2")</span>
                                    </div>
                                }
                                else
                                {
                                    <div class="mb-3">
                                        <strong>Total Cost:</strong>
                                        <br />
                                        <span class="text-muted">Not calculated</span>
                                    </div>
                                }
                            </div>
                        </div>

                        @if (!string.IsNullOrEmpty(timeLog.Description))
                        {
                            <div class="mt-4">
                                <h5>Description</h5>
                                <p class="text-muted">@timeLog.Description</p>
                            </div>
                        }
                    </div>
                </div>

                <!-- Task Information -->
                @if (timeLog.Task != null)
                {
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0"><i class="bi bi-list-task"></i> Task Information</h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <strong>Task Name:</strong> @timeLog.Task.TaskName
                                </div>
                                <div class="col-md-6">
                                    <strong>Task Status:</strong> 
                                    <span class="badge @GetTaskStatusBadgeClass(timeLog.Task.TaskStatus)">
                                        @timeLog.Task.TaskStatus
                                    </span>
                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="col-md-6">
                                    <strong>Status:</strong> 
                                    <span class="badge @GetTaskStatusBadgeClass(timeLog.Task.TaskStatus)">
                                        @timeLog.Task.TaskStatus
                                    </span>
                                </div>
                                <div class="col-md-6">
                                    <strong>Priority:</strong> 
                                    <span class="badge @GetPriorityBadgeClass(timeLog.Task.Priority)">
                                        @timeLog.Task.Priority
                                    </span>
                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(timeLog.Task.Description))
                            {
                                <div class="mt-3">
                                    <strong>Task Description:</strong>
                                    <p class="text-muted mb-0">@timeLog.Task.Description</p>
                                </div>
                            }
                        </div>
                    </div>
                }

                <!-- Resource Information -->
                @if (timeLog.Resource != null)
                {
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0"><i class="bi bi-person"></i> Resource Information</h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <strong>Name:</strong> @timeLog.Resource.FirstName @timeLog.Resource.LastName
                                </div>
                                <div class="col-md-6">
                                    <strong>Job Title:</strong> @timeLog.Resource.JobTitle
                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="col-md-6">
                                    <strong>Department:</strong> @(timeLog.Resource.Department ?? "Not specified")
                                </div>
                                <div class="col-md-6">
                                    <strong>Experience:</strong> @(timeLog.Resource.Experience ?? "Not specified")
                                </div>
                            </div>
                            @if (timeLog.Resource.Salary.HasValue)
                            {
                                <div class="mt-2">
                                    <strong>Salary:</strong> $@timeLog.Resource.Salary.Value.ToString("F2")/year
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>

            <div class="col-lg-4">
                <!-- Time Log Metadata -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="bi bi-info-circle"></i> Time Log Details</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <strong>Time Log ID:</strong>
                            <br />
                            <code class="small">@timeLog.TaskTimeLogId</code>
                        </div>
                        
                        <div class="mb-3">
                            <strong>Created:</strong>
                            <br />
                            <span>@timeLog.CreatedAt.ToString("MMM dd, yyyy HH:mm")</span>
                        </div>

                        <div class="mb-3">
                            <strong>Last Updated:</strong>
                            <br />
                            <span>@timeLog.UpdatedAt.ToString("MMM dd, yyyy HH:mm")</span>
                        </div>

                        @if (timeLog.Tenant != null)
                        {
                            <div class="mb-3">
                                <strong>Organization:</strong>
                                <br />
                                <span>@timeLog.Tenant.OrganizationName</span>
                            </div>
                        }
                    </div>
                </div>

                <!-- Quick Actions -->
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="bi bi-lightning"></i> Quick Actions</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <a href="/tasktimelogs/@timeLog.TaskTimeLogId/edit" class="btn btn-primary">
                                <i class="bi bi-pencil"></i> Edit Time Log
                            </a>
                            @if (timeLog.Task != null)
                            {
                                <a href="/tasks/@timeLog.Task.TaskId" class="btn btn-outline-info">
                                    <i class="bi bi-list-task"></i> View Task
                                </a>
                            }
                            @if (timeLog.Resource != null)
                            {
                                <a href="/resources/@timeLog.Resource.ResourceId" class="btn btn-outline-success">
                                    <i class="bi bi-person"></i> View Resource
                                </a>
                            }
                            <a href="/tasktimelogs" class="btn btn-outline-dark">
                                <i class="bi bi-arrow-left"></i> Back to Time Logs
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public Guid TaskTimeLogId { get; set; }

    private TaskTimeLogDto? timeLog;
    private bool isLoading = true;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        await LoadTimeLog();
    }

    private async Task LoadTimeLog()
    {
        try
        {
            isLoading = true;
            errorMessage = null;
            timeLog = await TaskTimeLogService.GetTaskTimeLogAsync(TaskTimeLogId);
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading time log: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task DeleteTimeLog(Guid id)
    {
        if (await TaskTimeLogService.DeleteTaskTimeLogAsync(id))
        {
            Navigation.NavigateTo("/tasktimelogs");
        }
        else
        {
            errorMessage = "Failed to delete time log";
        }
    }

    private string GetTaskStatusBadgeClass(string status)
    {
        return status.ToLower() switch
        {
            "to do" => "bg-secondary",
            "in progress" => "bg-warning",
            "completed" => "bg-success",
            "on hold" => "bg-info",
            "cancelled" => "bg-danger",
            _ => "bg-secondary"
        };
    }

    private string GetPriorityBadgeClass(string priority)
    {
        return priority.ToLower() switch
        {
            "low" => "bg-success",
            "medium" => "bg-warning",
            "high" => "bg-danger",
            "urgent" => "bg-dark",
            _ => "bg-secondary"
        };
    }
} 