@page "/organizationusers/{OrganizationId:guid}/{UserId:guid}"
@using MyProject.UI.ProjectManagementConsole.Models
@using MyProject.UI.ProjectManagementConsole.Services
@inject IOrganizationUserService OrganizationUserService
@inject NavigationManager Navigation

<PageTitle>Organization User Details</PageTitle>

<div class="container-fluid">
    <div class="row mb-3">
        <div class="col">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/organizationusers">Organization Users</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Organization User Details</li>
                </ol>
            </nav>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (errorMessage != null)
    {
        <div class="alert alert-danger" role="alert">
            @errorMessage
        </div>
    }
    else if (organizationUser == null)
    {
        <div class="alert alert-warning" role="alert">
            Organization User not found.
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h2>Organization User Details</h2>
                        <div class="btn-group">
                            <a href="/organizationusers/@OrganizationId/@UserId/edit" class="btn btn-primary">
                                <i class="bi bi-pencil"></i> Edit
                            </a>
                            <button type="button" class="btn btn-danger" @onclick="DeleteOrganizationUser">
                                <i class="bi bi-trash"></i> Remove
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <h5>User Information</h5>
                                @if (organizationUser.User != null)
                                {
                                    <dl class="row">
                                        <dt class="col-sm-4">Name</dt>
                                        <dd class="col-sm-8">@organizationUser.User.FirstName @organizationUser.User.LastName</dd>

                                        <dt class="col-sm-4">Email</dt>
                                        <dd class="col-sm-8">
                                            <a href="mailto:@organizationUser.User.Email">@organizationUser.User.Email</a>
                                        </dd>

                                        <dt class="col-sm-4">User Status</dt>
                                        <dd class="col-sm-8">
                                            <span class="badge @(organizationUser.User.IsActive ? "bg-success" : "bg-secondary")">
                                                @(organizationUser.User.IsActive ? "Active" : "Inactive")
                                            </span>
                                        </dd>
                                    </dl>
                                }
                                else
                                {
                                    <p class="text-muted">User information not available.</p>
                                }
                            </div>
                            <div class="col-md-6">
                                <h5>Organization Information</h5>
                                @if (organizationUser.Organization != null)
                                {
                                    <dl class="row">
                                        <dt class="col-sm-4">Name</dt>
                                        <dd class="col-sm-8">@organizationUser.Organization.OrganizationName</dd>

                                        <dt class="col-sm-4">Status</dt>
                                        <dd class="col-sm-8">
                                            <span class="badge @(organizationUser.Organization.Status == "Active" ? "bg-success" : "bg-secondary")">
                                                @organizationUser.Organization.Status
                                            </span>
                                        </dd>
                                    </dl>
                                }
                                else
                                {
                                    <p class="text-muted">Organization information not available.</p>
                                }
                            </div>
                        </div>

                        <div class="row mt-3">
                            <div class="col-md-6">
                                <h5>Membership Details</h5>
                                <dl class="row">
                                    <dt class="col-sm-4">Role</dt>
                                    <dd class="col-sm-8">
                                        <span class="badge bg-info">@organizationUser.Role</span>
                                    </dd>

                                    <dt class="col-sm-4">Access Level</dt>
                                    <dd class="col-sm-8">
                                        <span class="badge @GetAccessLevelBadgeClass(organizationUser.AccessLevel)">
                                            @organizationUser.AccessLevel
                                        </span>
                                    </dd>

                                    <dt class="col-sm-4">Member Status</dt>
                                    <dd class="col-sm-8">
                                        <span class="badge @(organizationUser.IsActive ? "bg-success" : "bg-secondary")">
                                            @(organizationUser.IsActive ? "Active" : "Inactive")
                                        </span>
                                    </dd>

                                    <dt class="col-sm-4">Joined Date</dt>
                                    <dd class="col-sm-8">@organizationUser.JoinedDate.ToString("MMM dd, yyyy")</dd>

                                    <dt class="col-sm-4">Last Access</dt>
                                    <dd class="col-sm-8">
                                        @if (organizationUser.LastAccessDate.HasValue)
                                        {
                                            <span>@organizationUser.LastAccessDate.Value.ToString("MMM dd, yyyy")</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Never</span>
                                        }
                                    </dd>
                                </dl>
                            </div>
                            <div class="col-md-6">
                                <h5>Account Information</h5>
                                <dl class="row">
                                    <dt class="col-sm-4">Created</dt>
                                    <dd class="col-sm-8">@organizationUser.CreatedAt.ToString("MMM dd, yyyy 'at' HH:mm")</dd>

                                    <dt class="col-sm-4">Last Updated</dt>
                                    <dd class="col-sm-8">@organizationUser.UpdatedAt.ToString("MMM dd, yyyy 'at' HH:mm")</dd>

                                    <dt class="col-sm-4">Membership Age</dt>
                                    <dd class="col-sm-8">@GetMembershipAge(organizationUser.JoinedDate)</dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="card">
                    <div class="card-header">
                        <h5>Membership Profile</h5>
                    </div>
                    <div class="card-body text-center">
                        <div class="mb-3">
                            <i class="bi bi-people display-1 text-primary"></i>
                        </div>
                        @if (organizationUser.User != null && organizationUser.Organization != null)
                        {
                            <h5>@organizationUser.User.FirstName @organizationUser.User.LastName</h5>
                            <p class="text-muted">@organizationUser.User.Email</p>
                            <p class="text-muted">Member of <strong>@organizationUser.Organization.OrganizationName</strong></p>
                        }
                        <div class="mb-3">
                            <span class="badge @GetAccessLevelBadgeClass(organizationUser.AccessLevel) fs-6">
                                @organizationUser.AccessLevel
                            </span>
                            <span class="badge bg-info fs-6 ms-2">
                                @organizationUser.Role
                            </span>
                        </div>
                        <p class="text-muted small">
                            @(organizationUser.IsActive ? "This member can access the organization." : "This member cannot access the organization.")
                        </p>
                    </div>
                </div>

                <div class="card mt-3">
                    <div class="card-header">
                        <h5>Quick Actions</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <a href="/organizationusers/@OrganizationId/@UserId/edit" class="btn btn-primary">
                                <i class="bi bi-pencil"></i> Edit Membership
                            </a>
                            <a href="/organizationusers" class="btn btn-outline-secondary">
                                <i class="bi bi-arrow-left"></i> Back to Organization Users
                            </a>
                            <button type="button" class="btn btn-outline-danger" @onclick="DeleteOrganizationUser">
                                <i class="bi bi-trash"></i> Remove from Organization
                            </button>
                        </div>
                    </div>
                </div>

                <div class="card mt-3">
                    <div class="card-header">
                        <h5>Membership Statistics</h5>
                    </div>
                    <div class="card-body">
                        <div class="row text-center">
                            <div class="col-6">
                                <div class="border-end">
                                    <h4 class="text-primary">@GetDaysSinceJoined(organizationUser.JoinedDate)</h4>
                                    <small class="text-muted">Days Member</small>
                                </div>
                            </div>
                            <div class="col-6">
                                <h4 class="text-success">@(organizationUser.IsActive ? "Yes" : "No")</h4>
                                <small class="text-muted">Can Access</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public Guid OrganizationId { get; set; }

    [Parameter]
    public Guid UserId { get; set; }

    private OrganizationUserDto? organizationUser;
    private bool isLoading = true;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        await LoadOrganizationUser();
    }

    private async Task LoadOrganizationUser()
    {
        try
        {
            isLoading = true;
            errorMessage = null;
            organizationUser = await OrganizationUserService.GetOrganizationUserAsync(OrganizationId, UserId);
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading organization user: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task DeleteOrganizationUser()
    {
        if (organizationUser != null && await OrganizationUserService.DeleteOrganizationUserAsync(OrganizationId, UserId))
        {
            Navigation.NavigateTo("/organizationusers");
        }
        else
        {
            errorMessage = "Failed to remove user from organization";
        }
    }

    private string GetAccessLevelBadgeClass(string accessLevel)
    {
        return accessLevel.ToLower() switch
        {
            "admin" => "bg-danger",
            "manager" => "bg-warning",
            "member" => "bg-success",
            "viewer" => "bg-info",
            "guest" => "bg-secondary",
            _ => "bg-secondary"
        };
    }

    private string GetMembershipAge(DateTime joinedDate)
    {
        var age = DateTime.Now - joinedDate;
        if (age.TotalDays < 1)
            return "Less than a day";
        else if (age.TotalDays < 30)
            return $"{(int)age.TotalDays} days";
        else if (age.TotalDays < 365)
            return $"{(int)(age.TotalDays / 30)} months";
        else
            return $"{(int)(age.TotalDays / 365)} years";
    }

    private int GetDaysSinceJoined(DateTime joinedDate)
    {
        return (int)(DateTime.Now - joinedDate).TotalDays;
    }
} 