@page "/users"
@using MyProject.UI.ProjectManagementConsole.Models
@using MyProject.UI.ProjectManagementConsole.Services
@inject IUserService UserService
@inject NavigationManager Navigation

<PageTitle>Users</PageTitle>

<div class="container-fluid">
    <div class="row mb-3">
        <div class="col">
            <h1>Users</h1>
        </div>
        <div class="col-auto">
            <a href="/users/create" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i> Create User
            </a>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (errorMessage != null)
    {
        <div class="alert alert-danger" role="alert">
            @errorMessage
        </div>
    }
    else
    {
        <div class="card">
            <div class="card-body">
                @if (users.Count == 0)
                {
                    <div class="text-center py-4">
                        <i class="bi bi-people display-1 text-muted"></i>
                        <h3 class="mt-3">No Users Found</h3>
                        <p class="text-muted">Get started by creating your first user.</p>
                        <a href="/users/create" class="btn btn-primary">
                            <i class="bi bi-plus-circle"></i> Create User
                        </a>
                    </div>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th>Status</th>
                                    <th>Created</th>
                                    <th>Last Updated</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in users)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <div class="flex-shrink-0">
                                                    <i class="bi bi-person-circle fs-4 text-primary"></i>
                                                </div>
                                                <div class="flex-grow-1 ms-2">
                                                    <strong>@user.FirstName @user.LastName</strong>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <a href="mailto:@user.Email">@user.Email</a>
                                        </td>
                                        <td>
                                            <span class="badge @(user.IsActive ? "bg-success" : "bg-secondary")">
                                                @(user.IsActive ? "Active" : "Inactive")
                                            </span>
                                        </td>
                                        <td>@user.CreatedAt.ToString("MMM dd, yyyy")</td>
                                        <td>@user.UpdatedAt.ToString("MMM dd, yyyy")</td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <a href="/users/@user.UserId" class="btn btn-sm btn-outline-primary">
                                                    <i class="bi bi-eye"></i> View
                                                </a>
                                                <a href="/users/@user.UserId/edit" class="btn btn-sm btn-outline-secondary">
                                                    <i class="bi bi-pencil"></i> Edit
                                                </a>
                                                <button type="button" class="btn btn-sm btn-outline-danger" @onclick="() => DeleteUser(user.UserId)">
                                                    <i class="bi bi-trash"></i> Delete
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
    }
</div>

@code {
    private List<UserDto> users = new();
    private bool isLoading = true;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        await LoadUsers();
    }

    private async Task LoadUsers()
    {
        try
        {
            isLoading = true;
            errorMessage = null;
            users = await UserService.GetUsersAsync();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading users: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task DeleteUser(Guid id)
    {
        if (await UserService.DeleteUserAsync(id))
        {
            await LoadUsers();
        }
        else
        {
            errorMessage = "Failed to delete user";
        }
    }
} 